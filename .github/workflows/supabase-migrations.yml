name: Supabase migrations

on:
  push:
    paths:
      - "supabase/**"
      - ".github/workflows/supabase-migrations.yml"
  pull_request:
    paths:
      - "supabase/**"

jobs:
  migrations:
    runs-on: ubuntu-latest
    env:
      SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
      GIT_SHA: ${{ github.sha }}
      ACTOR: ${{ github.actor }}
      WORKFLOW: supabase-migrations

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Install psql
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Clear prepared statements
        run: psql "$SUPABASE_DB_URL" -c "DEALLOCATE ALL;"

      - name: Ensure migrations dir
        run: mkdir -p supabase/migrations

      - name: Supabase lint
        run: supabase db lint

      - name: Run migrations
        id: run_migrations
        run: supabase db push --db-url "$SUPABASE_DB_URL"
        continue-on-error: true

      - name: Record migration run
        if: always()
        env:
          RUN_OUTCOME: ${{ steps.run_migrations.outcome }}
        run: |
          if [ "$RUN_OUTCOME" = "success" ]; then
            STATUS=success
            MSG="applied"
          else
            STATUS=failure
            MSG="supabase db push failed"
          fi

          SQL_CMD="insert into public.schema_migrations_ci (git_sha, actor, workflow, status, message) values ('$GIT_SHA', '$ACTOR', '$WORKFLOW', '$STATUS', '$MSG');"
          echo "$SQL_CMD" | psql "$SUPABASE_DB_URL"

      - name: Fail if migrations failed
        if: ${{ steps.run_migrations.outcome != 'success' }}
        run: exit 1
