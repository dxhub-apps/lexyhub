-- migrate:up
create table if not exists public.listing_quality_audits (
    id uuid primary key default gen_random_uuid(),
    listing_id uuid references public.listings(id) on delete set null,
    source_url text,
    inputs jsonb not null default '{}'::jsonb,
    quality_score numeric(5,2) not null,
    completeness_score numeric(5,2),
    sentiment_score numeric(6,3),
    readability_score numeric(6,3),
    keyword_density jsonb not null default '[]'::jsonb,
    intent text,
    tone text,
    missing_attributes text[] default '{}',
    quick_fixes jsonb default '[]'::jsonb,
    created_at timestamptz not null default now()
);

create index if not exists listing_quality_audits_listing_idx on public.listing_quality_audits(listing_id);

comment on table public.listing_quality_audits is 'Stored quality scorecards for Etsy listings including AI quick fixes.';

create table if not exists public.competitor_snapshots (
    id uuid primary key default gen_random_uuid(),
    query text not null,
    strong_listing_count integer not null default 0,
    weak_listing_count integer not null default 0,
    total_listings integer not null default 0,
    summary jsonb not null default '{}'::jsonb,
    created_at timestamptz not null default now()
);

create index if not exists competitor_snapshots_query_idx on public.competitor_snapshots using gin (to_tsvector('simple', query));

comment on table public.competitor_snapshots is 'Aggregated competitor benchmark snapshots keyed by query or shop name.';

create table if not exists public.competitor_snapshot_listings (
    id uuid primary key default gen_random_uuid(),
    snapshot_id uuid not null references public.competitor_snapshots(id) on delete cascade,
    title text not null,
    price_cents integer,
    currency text,
    reviews integer,
    rating numeric(4,2),
    sales_volume integer,
    tag_count integer,
    tags text[] default '{}',
    image_count integer,
    score numeric(10,2),
    created_at timestamptz not null default now()
);

create index if not exists competitor_snapshot_listings_snapshot_idx on public.competitor_snapshot_listings(snapshot_id);

comment on table public.competitor_snapshot_listings is 'Captured listings that power competitor snapshots for audit trails.';

create table if not exists public.tag_catalog (
    tag text primary key,
    search_volume integer not null default 0,
    trend_direction text not null default 'stable',
    competition_level text not null default 'medium',
    related_tags text[] default '{}',
    metadata jsonb default '{}'::jsonb,
    updated_at timestamptz not null default now()
);

comment on table public.tag_catalog is 'Internal tag database with demand, trend, and competition intelligence.';

create table if not exists public.listing_tag_health (
    id uuid primary key default gen_random_uuid(),
    listing_id uuid not null references public.listings(id) on delete cascade,
    tag text not null,
    score numeric(6,3) not null,
    status text not null,
    diagnostics jsonb not null default '{}'::jsonb,
    created_at timestamptz not null default now(),
    updated_at timestamptz not null default now(),
    unique(listing_id, tag)
);

create index if not exists listing_tag_health_listing_idx on public.listing_tag_health(listing_id);

comment on table public.listing_tag_health is 'Per-tag diagnostics generated by the tag optimizer.';

create table if not exists public.tag_optimizer_runs (
    id uuid primary key default gen_random_uuid(),
    listing_id uuid references public.listings(id) on delete set null,
    health_score numeric(6,3),
    duplicates text[] default '{}',
    low_volume_tags text[] default '{}',
    recommendations jsonb default '{}'::jsonb,
    created_at timestamptz not null default now()
);

create index if not exists tag_optimizer_runs_listing_idx on public.tag_optimizer_runs(listing_id);

comment on table public.tag_optimizer_runs is 'Run history for the tag optimizer including summary diagnostics.';

-- migrate:down
drop table if exists public.tag_optimizer_runs cascade;
drop table if exists public.listing_tag_health cascade;
drop table if exists public.tag_catalog cascade;
drop table if exists public.competitor_snapshot_listings cascade;
drop table if exists public.competitor_snapshots cascade;
drop table if exists public.listing_quality_audits cascade;
